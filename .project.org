#+TITLE: retro.el

* XXX-001 Lorem ipsum dolor [0/3]
Longer description of the task

- [ ] Something to do
- [ ] Something to do
- [ ] Something to do

* Refile [7/37]
Tasks to be refiled somewhere else in this project

- [X] test load tile from file ~with-content-file~ macro
      #+BEGIN_EXAMPLE
      (let ((sprite-file (make-temp-file "retro-test")))
        (with-content-file sprite-file
          '("5 5 1 #000000"
            "--"
            "#ff0000  #00ff00 #0000ff"
            "#00ff00  #0000ff #ff0000"
            "#0000ff  #ff0000 #00ff00")
           ;; here the file has been written and can be used
           ) ;; here the file has been closed and deleted
         )
      #+END_EXAMPLE
- [X] test load sprite from file
- [X] test load tile/sprite from file with comments
- [X] FIX: retro--game-loop must return t
- [X] clip sprites when they are partially inside the canvas, do nothing when they are outside
- [X] DEMO: walking pink monster with bending space (when goes outside from the right comes back from the left)
- [-] DEMO: game of life (see http://www.conwaylife.com/ref/lexicon/lex.htm or https://www.conwaylife.com/patterns/ for ASCII patterns)
  - [ ] implement game of life logic
  - [X] game `:update-every <seconds>` to make a fixed tick, use a wrapper function for the given `:update` function
  - [X] handle mouse click events (keypress . key) || (mouseclick . (x . y))
  - [ ] retro-game macro
  - [ ] import data from ASCII patterns above
- [ ] DEMO: t-rex with "smooth" scrolling background
  - [ ] load sprite from file with multiple plays (plays[name] -> frames[index] -> frame)
  - [ ] FIX: t-rex-demo is jumping on the x instead of the y coordinates :-/
  - [ ] scroll background based on time and not fixed amount (100px per second = velocity)?
  - [ ] add clouds
- [ ] DEMO: Captain America walking in every direction -> replace move demo?
- [ ] add bounding box to sprite and tiles
- [ ] benchmarks of different scenarios to evaluate possible performance improvement strategies
- [ ] test with calibrate.sprite and clipping with buttercup?
- [ ] learn about game engines (dragonfly book)
- [ ] learn about defclass and defmethod && how to handle state machines in Common Lisp
- [ ] something for gravity, velocity and damping + ground
- [ ] render based on time passed (see https://gameprogrammingpatterns.com/game-loop.html)
- [ ] collision detection between elements
- [ ] loading fonts
- [ ] track and display the fps somewhere
- [ ] duff device to plot in buffer to reduce the number of while iterations, define macro (unrolled-times N (V M) BODY) with throw/catch
- [ ] ~(retro--sprite-flip-v sprite)~
- [ ] retro--tile-flip-v
- [ ] flip-v
- [X] fix: how to properly import ht library to make flycheck happy
- [ ] garbage collection trick?
- [ ] extract example and ask for possible improvements on emacs-devel ml
- [ ] add hook on window resize -> font dimension resize
- [ ] special mode buffer? create a major mode for retro mode?
- [ ] major mode for sprite files with instant preview (side by side buffer)
- [ ] utility to import an image file into a sprite file
- [ ] game: offline chrome dinosaur
  - https://github.com/chirag64/t-rex-runner-bot/tree/gh-pages/img
  - https://github.com/wayou/t-rex-runner/blob/gh-pages/index.js
- [ ] game: snake
- [ ] game: flappy bird
- [ ] game: pico-8 emulator || similar platform
- [ ] game: space invaders original ROM
- [ ] game: game boy emulator?
- [ ] game: processing clone?

* Unrelated
Tasks unrelated to this project

- [ ] Something to do
